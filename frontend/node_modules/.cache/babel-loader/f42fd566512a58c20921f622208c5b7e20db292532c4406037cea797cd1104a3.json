{"ast":null,"code":"// Settings.js\nimport React,{useState}from\"react\";import{Container,Form,Button,Card}from\"react-bootstrap\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Settings=()=>{const[darkMode,setDarkMode]=useState(true);const[notifications,setNotifications]=useState(true);const handleSave=e=>{e.preventDefault();// Save preferences locally or via API\nalert(\"Settings saved!\");};return/*#__PURE__*/_jsxs(Container,{fluid:true,style:{marginLeft:\"220px\",paddingTop:\"30px\",color:\"#ffffff\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Settings\"}),/*#__PURE__*/_jsx(Card,{style:{marginTop:\"20px\"},children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSave,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Theme\"}),/*#__PURE__*/_jsx(Form.Check,{type:\"switch\",id:\"dark-mode-switch\",label:\"Dark Mode\",checked:darkMode,onChange:()=>setDarkMode(!darkMode)})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Notifications\"}),/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Enable Price Alerts\",checked:notifications,onChange:()=>setNotifications(!notifications)})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",className:\"w-100\",children:\"Save Settings\"})]})})})]});};export default Settings;","map":{"version":3,"names":["React","useState","Container","Form","Button","Card","jsx","_jsx","jsxs","_jsxs","Settings","darkMode","setDarkMode","notifications","setNotifications","handleSave","e","preventDefault","alert","fluid","style","marginLeft","paddingTop","color","children","marginTop","Body","onSubmit","Group","className","Label","Check","type","id","label","checked","onChange","variant"],"sources":["/Users/kabirsachdev/Documents/options-trading-algorithm/frontend/src/components/Settings.js"],"sourcesContent":["// Settings.js\nimport React, { useState } from \"react\";\nimport { Container, Form, Button, Card } from \"react-bootstrap\";\n\nconst Settings = () => {\n  const [darkMode, setDarkMode] = useState(true);\n  const [notifications, setNotifications] = useState(true);\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    // Save preferences locally or via API\n    alert(\"Settings saved!\");\n  };\n\n  return (\n    <Container\n      fluid\n      style={{ marginLeft: \"220px\", paddingTop: \"30px\", color: \"#ffffff\" }}\n    >\n      <h2>Settings</h2>\n      <Card style={{ marginTop: \"20px\" }}>\n        <Card.Body>\n          <Form onSubmit={handleSave}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Theme</Form.Label>\n              <Form.Check\n                type=\"switch\"\n                id=\"dark-mode-switch\"\n                label=\"Dark Mode\"\n                checked={darkMode}\n                onChange={() => setDarkMode(!darkMode)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Notifications</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Enable Price Alerts\"\n                checked={notifications}\n                onChange={() => setNotifications(!notifications)}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n              Save Settings\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Settings;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,CAAEC,IAAI,CAAEC,MAAM,CAAEC,IAAI,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhE,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACY,aAAa,CAAEC,gBAAgB,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAExD,KAAM,CAAAc,UAAU,CAAIC,CAAC,EAAK,CACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB;AACAC,KAAK,CAAC,iBAAiB,CAAC,CAC1B,CAAC,CAED,mBACET,KAAA,CAACP,SAAS,EACRiB,KAAK,MACLC,KAAK,CAAE,CAAEC,UAAU,CAAE,OAAO,CAAEC,UAAU,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAU,CAAE,CAAAC,QAAA,eAErEjB,IAAA,OAAAiB,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBjB,IAAA,CAACF,IAAI,EAACe,KAAK,CAAE,CAAEK,SAAS,CAAE,MAAO,CAAE,CAAAD,QAAA,cACjCjB,IAAA,CAACF,IAAI,CAACqB,IAAI,EAAAF,QAAA,cACRf,KAAA,CAACN,IAAI,EAACwB,QAAQ,CAAEZ,UAAW,CAAAS,QAAA,eACzBf,KAAA,CAACN,IAAI,CAACyB,KAAK,EAACC,SAAS,CAAC,MAAM,CAAAL,QAAA,eAC1BjB,IAAA,CAACJ,IAAI,CAAC2B,KAAK,EAAAN,QAAA,CAAC,OAAK,CAAY,CAAC,cAC9BjB,IAAA,CAACJ,IAAI,CAAC4B,KAAK,EACTC,IAAI,CAAC,QAAQ,CACbC,EAAE,CAAC,kBAAkB,CACrBC,KAAK,CAAC,WAAW,CACjBC,OAAO,CAAExB,QAAS,CAClByB,QAAQ,CAAEA,CAAA,GAAMxB,WAAW,CAAC,CAACD,QAAQ,CAAE,CACxC,CAAC,EACQ,CAAC,cAEbF,KAAA,CAACN,IAAI,CAACyB,KAAK,EAACC,SAAS,CAAC,MAAM,CAAAL,QAAA,eAC1BjB,IAAA,CAACJ,IAAI,CAAC2B,KAAK,EAAAN,QAAA,CAAC,eAAa,CAAY,CAAC,cACtCjB,IAAA,CAACJ,IAAI,CAAC4B,KAAK,EACTC,IAAI,CAAC,UAAU,CACfE,KAAK,CAAC,qBAAqB,CAC3BC,OAAO,CAAEtB,aAAc,CACvBuB,QAAQ,CAAEA,CAAA,GAAMtB,gBAAgB,CAAC,CAACD,aAAa,CAAE,CAClD,CAAC,EACQ,CAAC,cAEbN,IAAA,CAACH,MAAM,EAACiC,OAAO,CAAC,SAAS,CAACL,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAC,OAAO,CAAAL,QAAA,CAAC,eAE1D,CAAQ,CAAC,EACL,CAAC,CACE,CAAC,CACR,CAAC,EACE,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAd,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}